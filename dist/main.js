"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.help = void 0;

var _constants = require("./utils/constants");

var _chalk = _interopRequireDefault(require("chalk"));

var _commander = _interopRequireDefault(require("commander"));

var _apply = require("./apply");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var argv = process.argv.slice(2); // 显示所有的命令和提示

Object.keys(_constants.ACTIONMAP).forEach(action => {
  _commander.default.command(action).description(_constants.ACTIONMAP[action].description).alias(_constants.ACTIONMAP[action].alias).action(() => {
    switch (action) {
      case 'init':
        (0, _apply.apply)(action, ...process.argv.slice(3));
        break;

      case 'config':
        (0, _apply.apply)(action, ...process.argv.slice(3));
        break;

      default:
        break;
    }
  });
}); // 显示帮助信息

var help = () => {
  console.log(_chalk.default.green('\r\nUsage:'));
  Object.keys(_constants.ACTIONMAP).forEach(action => {
    _constants.ACTIONMAP[action].usages.forEach(usage => {
      console.log(_chalk.default.green('  - ' + usage));
    });
  });
  console.log('\r');
}; // 改变输出文字颜色


exports.help = help;

function make_green(txt) {
  return _chalk.default.green(txt);
}

_commander.default.version(_constants.VERSION, '-v, --version').usage('<command> [options]').on('-h', help).on('--help', help).parse(process.argv); // pcs 不带参数时或不正确的参数


if (!argv.length || !_constants.ACTIONMAP[argv[0]]) {
  _commander.default.outputHelp(make_green);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbImFyZ3YiLCJwcm9jZXNzIiwic2xpY2UiLCJPYmplY3QiLCJrZXlzIiwiQUNUSU9OTUFQIiwiZm9yRWFjaCIsImFjdGlvbiIsInByb2dyYW0iLCJjb21tYW5kIiwiZGVzY3JpcHRpb24iLCJhbGlhcyIsImhlbHAiLCJjb25zb2xlIiwibG9nIiwiY2hhbGsiLCJncmVlbiIsInVzYWdlcyIsInVzYWdlIiwibWFrZV9ncmVlbiIsInR4dCIsInZlcnNpb24iLCJWRVJTSU9OIiwib24iLCJwYXJzZSIsImxlbmd0aCIsIm91dHB1dEhlbHAiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQU1BLElBQU1BLElBQWdCLEdBQUdDLE9BQU8sQ0FBQ0QsSUFBUixDQUFhRSxLQUFiLENBQW1CLENBQW5CLENBQXpCLEMsQ0FFQTs7QUFDQUMsTUFBTSxDQUFDQyxJQUFQLENBQVlDLG9CQUFaLEVBQXVCQyxPQUF2QixDQUFnQ0MsTUFBRCxJQUFZO0FBQ3ZDQyxxQkFBUUMsT0FBUixDQUFnQkYsTUFBaEIsRUFDQ0csV0FERCxDQUNjTCxvQkFBRCxDQUFtQkUsTUFBbkIsRUFBMkJHLFdBRHhDLEVBRUNDLEtBRkQsQ0FFUU4sb0JBQUQsQ0FBbUJFLE1BQW5CLEVBQTJCSSxLQUZsQyxFQUdDSixNQUhELENBR1EsTUFBTTtBQUNWLFlBQVFBLE1BQVI7QUFDSSxXQUFLLE1BQUw7QUFDSSwwQkFBTUEsTUFBTixFQUFjLEdBQUdOLE9BQU8sQ0FBQ0QsSUFBUixDQUFhRSxLQUFiLENBQW1CLENBQW5CLENBQWpCO0FBQ0E7O0FBQ0osV0FBSyxRQUFMO0FBQ0ksMEJBQU1LLE1BQU4sRUFBYyxHQUFHTixPQUFPLENBQUNELElBQVIsQ0FBYUUsS0FBYixDQUFtQixDQUFuQixDQUFqQjtBQUNBOztBQUNKO0FBQ0k7QUFSUjtBQVVILEdBZEQ7QUFlSCxDQWhCRCxFLENBa0JBOztBQUNPLElBQU1VLElBQUksR0FBRyxNQUFNO0FBQ3RCQyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsZUFBTUMsS0FBTixDQUFZLFlBQVosQ0FBWjtBQUNBYixFQUFBQSxNQUFNLENBQUNDLElBQVAsQ0FBWUMsb0JBQVosRUFBdUJDLE9BQXZCLENBQWdDQyxNQUFELElBQVk7QUFDdENGLHdCQUFELENBQW1CRSxNQUFuQixFQUEyQlUsTUFBM0IsQ0FBa0NYLE9BQWxDLENBQTJDWSxLQUFELElBQWU7QUFDckRMLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxlQUFNQyxLQUFOLENBQVksU0FBU0UsS0FBckIsQ0FBWjtBQUNILEtBRkQ7QUFHSCxHQUpEO0FBS0FMLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLElBQVo7QUFDSCxDQVJNLEMsQ0FVUDs7Ozs7QUFDQSxTQUFTSyxVQUFULENBQW9CQyxHQUFwQixFQUFnQztBQUM1QixTQUFPTCxlQUFNQyxLQUFOLENBQVlJLEdBQVosQ0FBUDtBQUNIOztBQUVEWixtQkFDS2EsT0FETCxDQUNhQyxrQkFEYixFQUNzQixlQUR0QixFQUVFSixLQUZGLENBRVEscUJBRlIsRUFHS0ssRUFITCxDQUdRLElBSFIsRUFHY1gsSUFIZCxFQUlLVyxFQUpMLENBSVEsUUFKUixFQUlrQlgsSUFKbEIsRUFLS1ksS0FMTCxDQUtXdkIsT0FBTyxDQUFDRCxJQUxuQixFLENBTUE7OztBQUNBLElBQUksQ0FBQ0EsSUFBSSxDQUFDeUIsTUFBTixJQUFnQixDQUFFcEIsb0JBQUQsQ0FBb0JMLElBQUQsQ0FBaUIsQ0FBakIsQ0FBbkIsQ0FBckIsRUFBOEQ7QUFDMURRLHFCQUFRa0IsVUFBUixDQUFtQlAsVUFBbkI7QUFDSCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFZFUlNJT04sIEFDVElPTk1BUCB9IGZyb20gJy4vdXRpbHMvY29uc3RhbnRzJztcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsayc7XG5pbXBvcnQgcHJvZ3JhbSBmcm9tICdjb21tYW5kZXInO1xuaW1wb3J0IHsgYXBwbHkgfSBmcm9tICcuL2FwcGx5JztcblxuaW50ZXJmYWNlIFN0cmluZ0FycmF5IHtcbiAgICBbaW5kZXg6IG51bWJlcl06IHN0cmluZyxcbiAgICBsZW5ndGg6IG51bWJlclxufVxuY29uc3QgYXJndjpTdHJpbmdBcnJheSA9IHByb2Nlc3MuYXJndi5zbGljZSgyKTtcblxuLy8g5pi+56S65omA5pyJ55qE5ZG95Luk5ZKM5o+Q56S6XG5PYmplY3Qua2V5cyhBQ1RJT05NQVApLmZvckVhY2goKGFjdGlvbikgPT4ge1xuICAgIHByb2dyYW0uY29tbWFuZChhY3Rpb24pXG4gICAgLmRlc2NyaXB0aW9uKChBQ1RJT05NQVAgYXMgYW55KVthY3Rpb25dLmRlc2NyaXB0aW9uKVxuICAgIC5hbGlhcygoQUNUSU9OTUFQIGFzIGFueSlbYWN0aW9uXS5hbGlhcylcbiAgICAuYWN0aW9uKCgpID0+IHsgXG4gICAgICAgIHN3aXRjaCAoYWN0aW9uKSB7XG4gICAgICAgICAgICBjYXNlICdpbml0JzpcbiAgICAgICAgICAgICAgICBhcHBseShhY3Rpb24sIC4uLnByb2Nlc3MuYXJndi5zbGljZSgzKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdjb25maWcnOlxuICAgICAgICAgICAgICAgIGFwcGx5KGFjdGlvbiwgLi4ucHJvY2Vzcy5hcmd2LnNsaWNlKDMpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9KVxufSk7XG5cbi8vIOaYvuekuuW4ruWKqeS/oeaBr1xuZXhwb3J0IGNvbnN0IGhlbHAgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coY2hhbGsuZ3JlZW4oJ1xcclxcblVzYWdlOicpKTtcbiAgICBPYmplY3Qua2V5cyhBQ1RJT05NQVApLmZvckVhY2goKGFjdGlvbikgPT4ge1xuICAgICAgICAoQUNUSU9OTUFQIGFzIGFueSlbYWN0aW9uXS51c2FnZXMuZm9yRWFjaCgodXNhZ2U6YW55KSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhjaGFsay5ncmVlbignICAtICcgKyB1c2FnZSkpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICBjb25zb2xlLmxvZygnXFxyJyk7XG59XG5cbi8vIOaUueWPmOi+k+WHuuaWh+Wtl+minOiJslxuZnVuY3Rpb24gbWFrZV9ncmVlbih0eHQ6c3RyaW5nKSB7XG4gICAgcmV0dXJuIGNoYWxrLmdyZWVuKHR4dCk7IFxufVxuXG5wcm9ncmFtXG4gICAgLnZlcnNpb24oVkVSU0lPTiwgJy12LCAtLXZlcnNpb24nKVxuXHQudXNhZ2UoJzxjb21tYW5kPiBbb3B0aW9uc10nKVxuICAgIC5vbignLWgnLCBoZWxwKVxuICAgIC5vbignLS1oZWxwJywgaGVscClcbiAgICAucGFyc2UocHJvY2Vzcy5hcmd2KVxuLy8gcGNzIOS4jeW4puWPguaVsOaXtuaIluS4jeato+ehrueahOWPguaVsFxuaWYgKCFhcmd2Lmxlbmd0aCB8fCAhKEFDVElPTk1BUCBhcyBhbnkpWyhhcmd2IGFzIHN0cmluZylbMF1dKSB7XG4gICAgcHJvZ3JhbS5vdXRwdXRIZWxwKG1ha2VfZ3JlZW4pO1xufSBcblxuIl19