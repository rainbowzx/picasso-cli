"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CONSTTYPE = exports.UPDATEPROMPT = exports.DEFAULTPROMPT = exports.ANSWERLIST = exports.ACTIONMAP = exports.RC = exports.VERSION = void 0;

var _package = require("../../package.json");

//当前package.json的版本号
var VERSION = _package.version; // 用户的根目录

exports.VERSION = VERSION;
var HOME = process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME']; // 配置文件目录

var RC = "".concat(HOME, "/.pcsrc");
/**
 * pcs commands
 *    - init
 */

exports.RC = RC;
var ACTIONMAP = {
  init: {
    description: 'generate a new project from a template',
    usages: ['pcs init | pcs init projectName']
  },
  config: {
    description: 'config .pcsrc',
    usages: ['pcs config', 'pcs config set', 'pcs config get <k>', 'pcs config remove <k>']
  } // 项目配置交互列表

};
exports.ACTIONMAP = ACTIONMAP;

function isSpace(val) {
  if (!val || val.match(/\s/g)) {
    return '请不要输入空格且不能为空！';
  }

  return true;
}

function isNull(val) {
  if (!val) {
    return '不能为空！';
  }

  return true;
}

var ANSWERLIST = [{
  name: 'name',
  message: '请输入项目展示名称',
  default: 'xxx脚手架',
  validate: isNull
}, {
  name: 'value',
  message: '请输入项目名称',
  default: 'vue',
  validate: isSpace
}, {
  name: 'git',
  message: '请输入项目git地址',
  default: 'https://github.com/xxxx/xxx.git',
  validate: isNull
}]; // 脚手架默认配置

exports.ANSWERLIST = ANSWERLIST;

var DEFAULTPROMPT = context => {
  return [{
    name: 'projectName',
    message: '项目的名称',
    default: context.name,
    validate: isNull
  }, {
    name: 'projectVersion',
    message: '项目的版本号',
    default: '1.0.0'
  }, {
    name: 'projectDescription',
    message: '项目的简介',
    default: "A project named ".concat(context.name)
  }];
};

exports.DEFAULTPROMPT = DEFAULTPROMPT;
var UPDATEPROMPT = [{
  type: 'list',
  message: '请选择更新npm的方法',
  name: 'npmType',
  choices: [{
    name: "npm",
    message: 'npm'
  }, {
    name: 'cnpm',
    message: 'cnpm'
  }, {
    name: 'yarn',
    message: 'yarn'
  }]
}];
exports.UPDATEPROMPT = UPDATEPROMPT;
var CONSTTYPE = {
  TEMPLATE_NAME: "./download-temp",
  CUSTOMIZE_PROMPT: "promptConfig.js",
  FILE_IGNORE: ".fileignore"
};
exports.CONSTTYPE = CONSTTYPE;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9jb25zdGFudHMudHMiXSwibmFtZXMiOlsiVkVSU0lPTiIsInZlcnNpb24iLCJIT01FIiwicHJvY2VzcyIsImVudiIsInBsYXRmb3JtIiwiUkMiLCJBQ1RJT05NQVAiLCJpbml0IiwiZGVzY3JpcHRpb24iLCJ1c2FnZXMiLCJjb25maWciLCJpc1NwYWNlIiwidmFsIiwibWF0Y2giLCJpc051bGwiLCJBTlNXRVJMSVNUIiwibmFtZSIsIm1lc3NhZ2UiLCJkZWZhdWx0IiwidmFsaWRhdGUiLCJERUZBVUxUUFJPTVBUIiwiY29udGV4dCIsIlVQREFURVBST01QVCIsInR5cGUiLCJjaG9pY2VzIiwiQ09OU1RUWVBFIiwiVEVNUExBVEVfTkFNRSIsIkNVU1RPTUlaRV9QUk9NUFQiLCJGSUxFX0lHTk9SRSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUVBO0FBQ08sSUFBT0EsT0FBTyxHQUFHQyxnQkFBakIsQyxDQUdQOzs7QUFDQSxJQUFNQyxJQUFJLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRCxPQUFPLENBQUNFLFFBQVIsS0FBcUIsT0FBckIsR0FBK0IsYUFBL0IsR0FBK0MsTUFBM0QsQ0FBYixDLENBQ0E7O0FBQ08sSUFBTUMsRUFBRSxhQUFNSixJQUFOLFlBQVI7QUFFUDs7Ozs7O0FBSU8sSUFBTUssU0FBUyxHQUFHO0FBQ3JCQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkMsSUFBQUEsV0FBVyxFQUFFLHdDQURYO0FBRUZDLElBQUFBLE1BQU0sRUFBRSxDQUNKLGlDQURJO0FBRk4sR0FEZTtBQU9yQkMsRUFBQUEsTUFBTSxFQUFFO0FBQ05GLElBQUFBLFdBQVcsRUFBRSxlQURQO0FBRU5DLElBQUFBLE1BQU0sRUFBRSxDQUNKLFlBREksRUFFSixnQkFGSSxFQUdKLG9CQUhJLEVBSUosdUJBSkk7QUFGRixHQVBhLENBa0J6Qjs7QUFsQnlCLENBQWxCOzs7QUFvQlAsU0FBU0UsT0FBVCxDQUFpQkMsR0FBakIsRUFBNkI7QUFDM0IsTUFBSSxDQUFDQSxHQUFELElBQU1BLEdBQUcsQ0FBQ0MsS0FBSixDQUFVLEtBQVYsQ0FBVixFQUEyQjtBQUN6QixXQUFPLGVBQVA7QUFDRDs7QUFDRCxTQUFPLElBQVA7QUFDRDs7QUFFRCxTQUFTQyxNQUFULENBQWlCRixHQUFqQixFQUE2QjtBQUMzQixNQUFJLENBQUNBLEdBQUwsRUFBVTtBQUNSLFdBQU8sT0FBUDtBQUNEOztBQUNELFNBQU8sSUFBUDtBQUNEOztBQUVNLElBQU1HLFVBQVUsR0FBRyxDQUN4QjtBQUNFQyxFQUFBQSxJQUFJLEVBQUUsTUFEUjtBQUVFQyxFQUFBQSxPQUFPLEVBQUUsV0FGWDtBQUdFQyxFQUFBQSxPQUFPLEVBQUUsUUFIWDtBQUlFQyxFQUFBQSxRQUFRLEVBQUVMO0FBSlosQ0FEd0IsRUFPeEI7QUFDRUUsRUFBQUEsSUFBSSxFQUFFLE9BRFI7QUFFRUMsRUFBQUEsT0FBTyxFQUFFLFNBRlg7QUFHRUMsRUFBQUEsT0FBTyxFQUFFLEtBSFg7QUFJRUMsRUFBQUEsUUFBUSxFQUFFUjtBQUpaLENBUHdCLEVBYXhCO0FBQ0VLLEVBQUFBLElBQUksRUFBRSxLQURSO0FBRUVDLEVBQUFBLE9BQU8sRUFBRSxZQUZYO0FBR0VDLEVBQUFBLE9BQU8sRUFBRSxpQ0FIWDtBQUlFQyxFQUFBQSxRQUFRLEVBQUVMO0FBSlosQ0Fid0IsQ0FBbkIsQyxDQXFCUDs7OztBQUNPLElBQU1NLGFBQWEsR0FBS0MsT0FBRCxJQUFpQjtBQUMzQyxTQUFPLENBQ0w7QUFDRUwsSUFBQUEsSUFBSSxFQUFFLGFBRFI7QUFFRUMsSUFBQUEsT0FBTyxFQUFFLE9BRlg7QUFHRUMsSUFBQUEsT0FBTyxFQUFFRyxPQUFPLENBQUNMLElBSG5CO0FBSUVHLElBQUFBLFFBQVEsRUFBRUw7QUFKWixHQURLLEVBTUY7QUFDREUsSUFBQUEsSUFBSSxFQUFFLGdCQURMO0FBRURDLElBQUFBLE9BQU8sRUFBRSxRQUZSO0FBR0RDLElBQUFBLE9BQU8sRUFBRTtBQUhSLEdBTkUsRUFVRjtBQUNERixJQUFBQSxJQUFJLEVBQUUsb0JBREw7QUFFREMsSUFBQUEsT0FBTyxFQUFFLE9BRlI7QUFHREMsSUFBQUEsT0FBTyw0QkFBcUJHLE9BQU8sQ0FBQ0wsSUFBN0I7QUFITixHQVZFLENBQVA7QUFnQkgsQ0FqQk07OztBQW1CQSxJQUFNTSxZQUFZLEdBQUcsQ0FDMUI7QUFDRUMsRUFBQUEsSUFBSSxFQUFFLE1BRFI7QUFFRU4sRUFBQUEsT0FBTyxFQUFFLGFBRlg7QUFHRUQsRUFBQUEsSUFBSSxFQUFFLFNBSFI7QUFJRVEsRUFBQUEsT0FBTyxFQUFDLENBQ047QUFDRVIsSUFBQUEsSUFBSSxFQUFFLEtBRFI7QUFFRUMsSUFBQUEsT0FBTyxFQUFFO0FBRlgsR0FETSxFQUtOO0FBQ0VELElBQUFBLElBQUksRUFBRSxNQURSO0FBRUVDLElBQUFBLE9BQU8sRUFBRTtBQUZYLEdBTE0sRUFTTjtBQUNFRCxJQUFBQSxJQUFJLEVBQUUsTUFEUjtBQUVFQyxJQUFBQSxPQUFPLEVBQUU7QUFGWCxHQVRNO0FBSlYsQ0FEMEIsQ0FBckI7O0FBc0JBLElBQU1RLFNBQVMsR0FBRztBQUNyQkMsRUFBQUEsYUFBYSxFQUFFLGlCQURNO0FBRXJCQyxFQUFBQSxnQkFBZ0IsRUFBRSxpQkFGRztBQUdyQkMsRUFBQUEsV0FBVyxFQUFFO0FBSFEsQ0FBbEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2ZXJzaW9uIH0gZnJvbSAnLi4vLi4vcGFja2FnZS5qc29uJztcblxuLy/lvZPliY1wYWNrYWdlLmpzb27nmoTniYjmnKzlj7dcbmV4cG9ydCBjb25zdCAgVkVSU0lPTiA9IHZlcnNpb247XG5cblxuLy8g55So5oi355qE5qC555uu5b2VXG5jb25zdCBIT01FID0gcHJvY2Vzcy5lbnZbcHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJyA/ICdVU0VSUFJPRklMRScgOiAnSE9NRSddO1xuLy8g6YWN572u5paH5Lu255uu5b2VXG5leHBvcnQgY29uc3QgUkMgPSBgJHtIT01FfS8ucGNzcmNgO1xuXG4vKipcbiAqIHBjcyBjb21tYW5kc1xuICogICAgLSBpbml0XG4gKi9cbmV4cG9ydCBjb25zdCBBQ1RJT05NQVAgPSB7XG4gICAgaW5pdDoge1xuICAgICAgICBkZXNjcmlwdGlvbjogJ2dlbmVyYXRlIGEgbmV3IHByb2plY3QgZnJvbSBhIHRlbXBsYXRlJyxcbiAgICAgICAgdXNhZ2VzOiBbXG4gICAgICAgICAgICAncGNzIGluaXQgfCBwY3MgaW5pdCBwcm9qZWN0TmFtZSdcbiAgICAgICAgXVxuICAgIH0sXG4gICAgY29uZmlnOiB7XG4gICAgICBkZXNjcmlwdGlvbjogJ2NvbmZpZyAucGNzcmMnLFxuICAgICAgdXNhZ2VzOiBbXG4gICAgICAgICAgJ3BjcyBjb25maWcnLFxuICAgICAgICAgICdwY3MgY29uZmlnIHNldCcsXG4gICAgICAgICAgJ3BjcyBjb25maWcgZ2V0IDxrPicsXG4gICAgICAgICAgJ3BjcyBjb25maWcgcmVtb3ZlIDxrPidcbiAgICAgIF0gXG4gICAgfSxcbn1cblxuLy8g6aG555uu6YWN572u5Lqk5LqS5YiX6KGoXG5cbmZ1bmN0aW9uIGlzU3BhY2UodmFsOnN0cmluZykge1xuICBpZiAoIXZhbHx8dmFsLm1hdGNoKC9cXHMvZykpe1xuICAgIHJldHVybiAn6K+35LiN6KaB6L6T5YWl56m65qC85LiU5LiN6IO95Li656m677yBJztcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gaXNOdWxsICh2YWw6c3RyaW5nKSB7XG4gIGlmICghdmFsKSB7XG4gICAgcmV0dXJuICfkuI3og73kuLrnqbrvvIEnO1xuICB9XG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgY29uc3QgQU5TV0VSTElTVCA9IFtcbiAge1xuICAgIG5hbWU6ICduYW1lJyxcbiAgICBtZXNzYWdlOiAn6K+36L6T5YWl6aG555uu5bGV56S65ZCN56ewJyxcbiAgICBkZWZhdWx0OiAneHh46ISa5omL5p62JyxcbiAgICB2YWxpZGF0ZTogaXNOdWxsXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAndmFsdWUnLFxuICAgIG1lc3NhZ2U6ICfor7fovpPlhaXpobnnm67lkI3np7AnLFxuICAgIGRlZmF1bHQ6ICd2dWUnLFxuICAgIHZhbGlkYXRlOiBpc1NwYWNlXG4gIH0sXG4gIHtcbiAgICBuYW1lOiAnZ2l0JyxcbiAgICBtZXNzYWdlOiAn6K+36L6T5YWl6aG555uuZ2l05Zyw5Z2AJyxcbiAgICBkZWZhdWx0OiAnaHR0cHM6Ly9naXRodWIuY29tL3h4eHgveHh4LmdpdCcsXG4gICAgdmFsaWRhdGU6IGlzTnVsbFxuICB9LFxuXVxuXG4vLyDohJrmiYvmnrbpu5jorqTphY3nva5cbmV4cG9ydCBjb25zdCBERUZBVUxUUFJPTVBUID0gIChjb250ZXh0OmFueSkgPT4ge1xuICAgIHJldHVybiBbXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdwcm9qZWN0TmFtZScsXG4gICAgICAgIG1lc3NhZ2U6ICfpobnnm67nmoTlkI3np7AnLFxuICAgICAgICBkZWZhdWx0OiBjb250ZXh0Lm5hbWUsXG4gICAgICAgIHZhbGlkYXRlOiBpc051bGxcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ3Byb2plY3RWZXJzaW9uJyxcbiAgICAgICAgbWVzc2FnZTogJ+mhueebrueahOeJiOacrOWPtycsXG4gICAgICAgIGRlZmF1bHQ6ICcxLjAuMCcsXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdwcm9qZWN0RGVzY3JpcHRpb24nLFxuICAgICAgICBtZXNzYWdlOiAn6aG555uu55qE566A5LuLJyxcbiAgICAgICAgZGVmYXVsdDogYEEgcHJvamVjdCBuYW1lZCAke2NvbnRleHQubmFtZX1gXG4gICAgICB9XG4gICAgXVxufVxuXG5leHBvcnQgY29uc3QgVVBEQVRFUFJPTVBUID0gW1xuICB7XG4gICAgdHlwZTogJ2xpc3QnLFxuICAgIG1lc3NhZ2U6ICfor7fpgInmi6nmm7TmlrBucG3nmoTmlrnms5UnLFxuICAgIG5hbWU6ICducG1UeXBlJyxcbiAgICBjaG9pY2VzOltcbiAgICAgIHtcbiAgICAgICAgbmFtZTogXCJucG1cIixcbiAgICAgICAgbWVzc2FnZTogJ25wbSdcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdjbnBtJyxcbiAgICAgICAgbWVzc2FnZTogJ2NucG0nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiAneWFybicsXG4gICAgICAgIG1lc3NhZ2U6ICd5YXJuJ1xuICAgICAgfVxuICAgIF1cbiAgfVxuXVxuXG5leHBvcnQgY29uc3QgQ09OU1RUWVBFID0ge1xuICAgIFRFTVBMQVRFX05BTUU6IFwiLi9kb3dubG9hZC10ZW1wXCIsXG4gICAgQ1VTVE9NSVpFX1BST01QVDogXCJwcm9tcHRDb25maWcuanNcIixcbiAgICBGSUxFX0lHTk9SRTogXCIuZmlsZWlnbm9yZVwiXG59Il19